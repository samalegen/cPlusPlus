#include <iostream>

//3.2 Access modifiers, incapsulation

struct S {
private:
   friend void g(int);//друзей можно объявлять в любой секции хоть публичной хоть приватной, также можно создавать друзья классы и структуры, это значит что обращаться к моим приватным полям они смогут. Усли объявить что В друг А, это не значит что А друг В. Если А друг В, а В друг С, это не значит что А друг С. Конструкция friend добавляет только одно ребро. ЧЕМ МЕНЬШЕ ДРУЗЕЙ ТЕМ ЛУЧШЕ!

   int a;
   void f(int) {
      std::cout << 1 << '\n';
   }
public:
   double d;
   void f (double) {
      std::cout << 2 << '\n';
   }
};

void g(int x) {
   S s;
   s.f(x);
}

int main() {
   S s;//агрегатная инициализация не допускается потому что есть приватные поля.
  // s.a;
   //s.f(0); // сначала разреншение перегрузки затем проверка доступа. если метод приватный будет CE
   g(1);

}
